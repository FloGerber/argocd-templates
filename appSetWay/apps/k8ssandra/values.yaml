# Updated enterprise-ready values.yaml aligned with latest K8ssandraClusterSpec
#namespace: "k8ssandra" #"cassandra-cluster"
# annotations: {}
# labels: {}

# Authentication: whether authentication is enabled for Cassandra & auxiliary components
auth:
  enabled: true

# secrets handling: operator will expect secrets in-cluster when using external provider
#secretsProvider: internal

# Cassandra top-level settings
cassandra:
  clusterName: "kdp-addon-cassandra-cluster"
  serverVersion: "4.0.1"
  softPodAntiAffinity: true
  metadata:
    annotations:
      {
        argocd.argoproj.io/tracking-id: app-k8ssandra:k8ssandra.io/K8ssandraCluster:k8ssandra/app-k8ssandra,
      }
  # mgmtAPIHeap: "512Mi"
  defaultResources:
    requests:
      cpu: "200m"
      memory: "4Gi"
    limits:
      cpu: "1500m"
      memory: "6Gi"
  # config:
  #   cassandraYaml: {}
  #   jvmOptions: {}
  # storageConfig: {}  # cluster-level storage defaults (can be overridden per-dc)
  # tolerations: []
  # podSecurityContext: {}

datacenters:
  - name: prod-dc-glp
    # metadata:
    #   annotations:
    #     {
    #       argocd.argoproj.io/tracking-id: app-k8ssandra:k8ssandra.io/K8ssandraCluster:k8ssandra/app-k8ssandra,
    #     }
    managementApiAuth:
      insecure: {}
    size: 1
    podTemplateSpec:
      spec:
        containers:
          - name: "cassandra"
            livenessProbe:
              httpGet:
                path: /api/v0/probes/liveness
                port: 8080
              initialDelaySeconds: 20
              periodSeconds: 20
            readinessProbe:
              httpGet:
                path: /api/v0/probes/readiness
                port: 8080
              initialDelaySeconds: 35
              periodSeconds: 10
            resources:
              limits:
                memory: 6Gi
              requests:
                memory: 4Gi
    storageConfig:
      cassandraDataVolumeClaimSpec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    racks:
      - name: r1
    stargate:
      allowStargateOnDataNodes: true
      size: 1
      heapSize: 256M
    config:
      jvmOptions:
        heapSize: 512

stargate:
  enabled: false

# Reaper (repairs) settings
reaper:
  enabled: true
  #serviceAccountName: "reaper-sa"
  # affinity: {}
  autoScheduling:
    enabled: true
    # optionally other fields like reconciliationPeriod etc
  # cassandraUserSecretRef:
  #   name: "reaper-cassandra-credentials"
  deploymentMode: "PER_DC"
  # heapSize: "2Gi"
  httpManagement:
    enabled: false
  keyspace: "reaper_db"
  # livenessProbe: {}
  # readinessProbe: {}
  metadata:
    annotations:
      {
        argocd.argoproj.io/tracking-id: app-k8ssandra:k8ssandra.io/K8ssandraCluster:k8ssandra/app-k8ssandra,
      }
  podSecurityContext:
    runAsNonRoot: true
  # resources:
  #   requests:
  #     cpu: "100m"
  #     memory: "512Mi"
  #   limits:
  #     cpu: "300m"
  #     memory: "1Gi"
  # secretsProvider: "external"
  securityContext:
    runAsNonRoot: true
  # telemetry: {}
  # tolerations: []

# Medusa backups
medusa:
  enabled: false
  storage:
    provider: s3
    bucket: "cassandra-backups"
    prefix: "prod-cluster"
    region: "eu-central-1"
    retentionDays: 30

# Optional: list of external DC names (strings)
externalDatacenters: []

# ExternalSecrets (Vault) integration - only references (no secret content)
externalSecrets:
  enabled: false
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  paths:
    superuser: secret/data/k8ssandra/prod/superuser
    serverTls: secret/data/k8ssandra/prod/tls/server
    clientTls: secret/data/k8ssandra/prod/tls/client
    medusa: secret/data/k8ssandra/prod/medusa

# Security policy applied to pods
security:
  runAsNonRoot: true
  fsGroup: 999
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  podSecurityContext: {}

# Pod placement defaults
nodeSelector: {}
tolerations: []
affinity: {}

# Resource defaults (can be overridden per-datacenter)
defaultResources:
  requests:
    cpu: "500m"
    memory: "2Gi"
  limits:
    cpu: "2000m"
    memory: "8Gi"
