# Updated enterprise-ready values.yaml aligned with latest K8ssandraClusterSpec
#namespace: "k8ssandra" #"cassandra-cluster"
# annotations: {}
# labels: {}

# Authentication: whether authentication is enabled for Cassandra & auxiliary components
auth:
  enabled: true

# secrets handling: operator will expect secrets in-cluster when using external provider
#secretsProvider: internal

# Cassandra top-level settings
cassandra:
  clusterName: "kdp-addon-cassandra-cluster"
  serverVersion: "5.0.5"
  softPodAntiAffinity: true
  # mgmtAPIHeap: "512Mi"
  defaultResources:
    requests:
      cpu: "200m"
      memory: "200Mi"
    limits:
      cpu: "500m"
      memory: "500Mi"
  # config:
  #   cassandraYaml: {}
  #   jvmOptions: {}
  # storageConfig: {}  # cluster-level storage defaults (can be overridden per-dc)
  # tolerations: []
  # podSecurityContext: {}

datacenters:
  - name: prod-dc-glp
    metadata:
      annotations: {
          # Avoid pruning CassandraDatacenter.
          # We do not manage it directly.
          # We just want to see what is happening there.
          argocd.argoproj.io/sync-options: Prune=false,
          # Do not show out-of-sync on the app
          # You will still see out-of-sync on the resource :(
          argocd.argoproj.io/compare-options: IgnoreExtraneous,
        }
      labels: { argocd.argoproj.io/instance: cassandra }
    size: 2
    # racks:
    #   - name: rack1
    storageConfig:
      cassandraDataVolumeClaimSpec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
    # storageConfig:
    #   cassandraDataVolumeClaimSpec:
    #     storageClassName: standard
    #     size: 10Gi
    # resources:
    #   requests:
    #     cpu: "2000m"
    #     memory: "6Gi"
    #   limits:
    #     cpu: "8000m"
    #     memory: "16Gi"

# Reaper (repairs) settings
reaper:
  enabled: true
  #serviceAccountName: "reaper-sa"
  # affinity: {}
  autoScheduling:
    enabled: true
    # optionally other fields like reconciliationPeriod etc
  # cassandraUserSecretRef:
  #   name: "reaper-cassandra-credentials"
  deploymentMode: "PER_DC"
  # heapSize: "2Gi"
  httpManagement:
    enabled: false
  keyspace: "reaper_db"
  # livenessProbe: {}
  # readinessProbe: {}
  # metadata:
  #   labels: {}
  #   annotations: {}
  podSecurityContext:
    runAsNonRoot: true
  # resources:
  #   requests:
  #     cpu: "100m"
  #     memory: "512Mi"
  #   limits:
  #     cpu: "300m"
  #     memory: "1Gi"
  # secretsProvider: "external"
  securityContext:
    runAsNonRoot: true
  # telemetry: {}
  # tolerations: []

# Medusa backups
medusa:
  enabled: false
  storage:
    provider: s3
    bucket: "cassandra-backups"
    prefix: "prod-cluster"
    region: "eu-central-1"
    retentionDays: 30

# Optional: list of external DC names (strings)
externalDatacenters: []

# ExternalSecrets (Vault) integration - only references (no secret content)
externalSecrets:
  enabled: false
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  paths:
    superuser: secret/data/k8ssandra/prod/superuser
    serverTls: secret/data/k8ssandra/prod/tls/server
    clientTls: secret/data/k8ssandra/prod/tls/client
    medusa: secret/data/k8ssandra/prod/medusa

# Security policy applied to pods
security:
  runAsNonRoot: true
  fsGroup: 999
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  podSecurityContext: {}

# Pod placement defaults
nodeSelector: {}
tolerations: []
affinity: {}

# Resource defaults (can be overridden per-datacenter)
defaultResources:
  requests:
    cpu: "500m"
    memory: "2Gi"
  limits:
    cpu: "2000m"
    memory: "8Gi"
