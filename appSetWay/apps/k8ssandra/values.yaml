# Updated enterprise-ready values.yaml aligned with latest K8ssandraClusterSpec
#namespace: "k8ssandra" #"cassandra-cluster"
# annotations: {}
# labels: {}

# Authentication: whether authentication is enabled for Cassandra & auxiliary components
# auth: "false"

# secrets handling: operator will expect secrets in-cluster when using external provider
# secretsProvider: internal

# Cassandra top-level settings
cassandra:
  clusterName: "kdp-addon-cassandra-cluster"
  serverVersion: "4.1.10"
  # softPodAntiAffinity: true
  metadata:
    annotations:
      {
        argocd.argoproj.io/tracking-id: app-k8ssandra:k8ssandra.io/K8ssandraCluster:k8ssandra/app-k8ssandra,
      }
  # mgmtAPIHeap: "512Mi"
  # defaultResources:
  #   requests:
  #     cpu: "200m"
  #     memory: "4Gi"
  #   limits:
  #     cpu: "1500m"
  #     memory: "6Gi"
  # config:
  #   cassandraYaml: {}
  #   jvmOptions: {}
  # storageConfig: {}  # cluster-level storage defaults (can be overridden per-dc)
  # tolerations: []
  # podSecurityContext: {}

datacenters:
  - name: prod-dc-glp
    # metadata:
    #   annotations:
    #     {
    #       argocd.argoproj.io/tracking-id: app-k8ssandra:k8ssandra.io/K8ssandraCluster:k8ssandra/app-k8ssandra,
    #     }
    # managementApiAuth:
    #   insecure: {}
    size: 2
    storageConfig:
      cassandraDataVolumeClaimSpec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    stargate:
      size: 1
      heapSize: 256M
    config:
      jvmOptions:
        heapSize: 512M

stargate:
  enabled: false

# Reaper (repairs) settings
reaper:
  enabled: true
  #serviceAccountName: "reaper-sa"
  # affinity: {}
  autoScheduling:
    enabled: true
  telemetry:
    prometheus:
      enabled: true
    mcac:
      enabled: false
    cassandra:
      endpoint:
        address: 0.0.0.0
  podSecurityContext:
    fsGroup: 1001
    runAsGroup: 1001
    runAsUser: 1001
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  initContainerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    privileged: false
    capabilities:
      drop:
        - ALL
        - CAP_NET_RAW
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    privileged: false
    capabilities:
      drop:
        - ALL
        - CAP_NET_RAW
  httpManagement:
    enabled: false

# Medusa backups
medusa:
  enabled: false
  storage:
    provider: s3
    bucket: "cassandra-backups"
    prefix: "prod-cluster"
    region: "eu-central-1"
    retentionDays: 30

# Optional: list of external DC names (strings)
externalDatacenters: []

# ExternalSecrets (Vault) integration - only references (no secret content)
externalSecrets:
  enabled: false
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  paths:
    superuser: secret/data/k8ssandra/prod/superuser
    serverTls: secret/data/k8ssandra/prod/tls/server
    clientTls: secret/data/k8ssandra/prod/tls/client
    medusa: secret/data/k8ssandra/prod/medusa

# Security policy applied to pods
security:
  runAsNonRoot: true
  fsGroup: 999
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  podSecurityContext: {}

# Pod placement defaults
nodeSelector: {}
tolerations: []
affinity: {}

# Resource defaults (can be overridden per-datacenter)
defaultResources:
  requests:
    cpu: "500m"
    memory: "2Gi"
  limits:
    cpu: "2000m"
    memory: "8Gi"
