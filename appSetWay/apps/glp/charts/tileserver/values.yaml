fullnameOverride: tileserver

deployment:
  enabled: true
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  annotations:
    deployment.kubernetes.io/revision: "1"
  podAnnotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "8090"
    prometheus.io/scrape: "true"
    redeploytrigger: xxx
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - tileserver
            topologyKey: topology.kubernetes.io/zone
        - weight: 5
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - tileserver
            topologyKey: kubernetes.io/hostname
  hostAliases:
    - ip: x.x.x.x
      hostnames:
        - xxxxx.blob.
    - ip: x.x.x.x
      hostnames:
        - xxxxx-secondary.blob.
    - ip: x.x.x.x
      hostnames:
        - xxxx.blob.
    - ip: x.x.x.x
      hostnames:
        - xxxx.redis.cache
  terminationGracePeriodSeconds: 60
  serviceAccount:
    automount: false

containers:
  - name: tileserver
    image:
      repository: xx
      tag: xx
    imagePullPolicy: Always
    ports:
      - containerPort: 8090
        name: serviceport
        protocol: TCP
    env:
      - name: SOURCE_URL
        value: http://localhost:8080
      - name: CACHE_VERSION
        value: xxxxrverglVersion
      - name: AZ_STORAGE_ACCOUNT
        value: https://xxxx.blob.
      - name: AZ_BLOB_CONTAINER
        value: xx-tilecache
      - name: SERVER_LISTEN_ADDRESS
        value: :8090
      - name: LRU_ITEMS
        value: "32000"
      - name: MAX_CONCURRENT_SOURCE_REQUESTS
        value: "40"
      - name: HEALTH_URL_SCRIPT
        value: math.randomseed(os.time());math.random();math.random();math.random();z=math.random(16,18);return string.format("http://localhost:8090/styles/english/12/2230/1423.png,http://localhost:8090/styles/english/%d/%d/%d.png",z,math.random(2^z-1),math.random(2^z-1))
      - name: GOMAXPROCS
        value: "1"
      - name: LOG_LEVEL
        value: ERROR
      - name: GOGC
        value: "100"
      - name: GOMEMLIMIT
        value: 512MiB
      - name: FILTER_REGEXP
        value: /(0|[1-9][0-9]*)/(0|[1-9][0-9]*)/(0|[1-9][0-9]*).png\??$
    envFrom:
      - secretRef:
          name: tileserver-secret
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "20"]
    resources:
      limits:
        cpu: 100m
        memory: 1Gi
        ephemeral-storage: 1Gi
      requests:
        cpu: 25m
        memory: 1Gi
        ephemeral-storage: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
    probes:
      liveness:
        httpGet:
          path: /health
          port: 8090
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 30
        successThreshold: 1
        failureThreshold: 10
      readiness:
        httpGet:
          path: /health
          port: 8090
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 30
        successThreshold: 1
        failureThreshold: 5
      startup:
        httpGet:
          path: /health
          port: 8090
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 30
        successThreshold: 1
        failureThreshold: 13

  - name: tileserver-tileserver-sidecar
    image:
      repository: xx
      tag: xx
    imagePullPolicy: Always
    ports:
      - containerPort: 8080
        name: serviceport
        protocol: TCP
    env:
      - name: READ2HTTP_FILE_NAME
        value: /data/tiles.mbtiles
      - name: READ2HTTP_AZURE_BLOB_MD5
        value: "yes"
      - name: MIN_RENDERER_POOLSIZES
        value: "[2]"
      - name: MAX_RENDERER_POOLSIZES
        value: "[2]"
      - name: TILESERVER_OPTS
        value: --silent
    envFrom:
      - secretRef:
          name: tileserver-sidecar-secret
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "20"]
    resources:
      limits:
        cpu: 500m
        memory: 2560Mi
        ephemeral-storage: 1Gi
      requests:
        cpu: 500m
        memory: 2560Mi
        ephemeral-storage: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
    probes:
      liveness:
        httpGet:
          path: /health
          port: 8080
        periodSeconds: 20
        timeoutSeconds: 30
        successThreshold: 1
        failureThreshold: 10
      readiness:
        httpGet:
          path: /health
          port: 8080
        periodSeconds: 20
        timeoutSeconds: 30
        successThreshold: 1
        failureThreshold: 5
      startup:
        httpGet:
          path: /health
          port: 8080
        periodSeconds: 20
        timeoutSeconds: 30
        successThreshold: 1
        failureThreshold: 13

service:
  enabled: true
  type: ClusterIP
  clusterIP: x.x.x.x
  ports:
    - name: serviceport
      port: 8090
      targetPort: 8090
      protocol: TCP
    - name: serviceport-tileserver
      port: 8050
      targetPort: 8080
      protocol: TCP
  sessionAffinity: None

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: ContainerResource
      containerResource:
        container: tileserver
        name: cpu
        target:
          type: AverageValue
          averageValue: 70m
    - type: ContainerResource
      containerResource:
        container: tileserver-tileserver-sidecar
        name: cpu
        target:
          type: AverageValue
          averageValue: 350m
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      selectPolicy: Max
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      selectPolicy: Max
      policies:
        - type: Pods
          value: 1
          periodSeconds: 180

networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  podSelector:
    matchLabels:
      app: tileserver
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: k8s-ansible-helper
        - podSelector:
            matchLabels:
              app: kong
        - namespaceSelector:
            matchLabels:
              kubernetes.io/cluster-service: "true"
          podSelector:
            matchLabels:
              kubernetes.azure.com/managedby: aks
      ports:
        - port: 8090
          protocol: TCP
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/cluster-service: "true"
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
    - to:
        - ipBlock:
            cidr: x.x.x.x/32
        - ipBlock:
            cidr: x.x.x.x/32
        - ipBlock:
            cidr: x.x.x.x/32
      ports:
        - port: 80
          protocol: TCP
        - port: 443
          protocol: TCP

secrets:
  tileserver:
    enabled: true
    type: Opaque
    data: AZ_BLOB_SAS
