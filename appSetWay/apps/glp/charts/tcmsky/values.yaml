fullnameOverride: tcmsky

deployment:
  enabled: true
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/publicEndpoints: '[{"addresses":["x.x.x.x"],"port":80,"protocol":"HTTP","serviceName":"xx-xx-development--env03:tcmsky","ingressName":"xx-xx-development--env03:tcmsky","hostname":"www-dev-sx.x.x.x","path":"/x/xx/tcm-sky(.*)","allNodes":false}]'
  podAnnotations:
    redeploytrigger: xxxx
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - tcmsky
            topologyKey: topology.kubernetes.io/zone
        - weight: 5
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - tcmsky
            topologyKey: kubernetes.io/hostname
  hostAliases:
    - ip: x.x.x.x
      hostnames:
        - xxxxx.blob.core.windows.net
    - ip: x.x.x.x
      hostnames:
        - xxxxx-secondary.blob.core.windows.net
    - ip: x.x.x.x
      hostnames:
        - xxxx.blob.core.windows.net
    - ip: x.x.x.x
      hostnames:
        - xxxx.redis.cache.windows.net
  terminationGracePeriodSeconds: 60
  serviceAccount:
    automount: false

containers:
  - name: tcmsky
    image: docker.repo.xxx.xxx/servicecatalog/tcm-sky:2.0.0-saas-202507100937
    imagePullPolicy: Always
    ports:
      - name: serviceport
        containerPort: 8080
        protocol: TCP
    env:
      - name: FEATURE_FLAGS_API_URL
        value: https://api-dev-sx.x.x.x/x/xx/
      - name: AUTHORIZATION_BASE_URL
        value: https://api-dev-sx.x.x.x/x/xx/
      - name: AUTH_CLIENT_ID
        value: 99fxxxx
      - name: AUTH_SCOPE
        value: openid offline_acxxxxx
      - name: AUTH_REQUIRE_HTTPS
        value: "true"
      - name: AUTH_ERROR_PAGE_URL
        value: https://www-dev-sx.x.x.x/x/xx/userflow_feedback.html
      - name: AUTH_DISCOVERY_DOCUMENT_URL
        value: https://xxx.b2clogin.com/xxx/v2.0/.well-known/openid-configuration?p=xxx
      - name: ENABLE_EIB
        value: "false"
      - name: PATH_TOLL_CONTEXTS
        value: /v1/toll-contexts
      - name: PATH_TOLL_CONTEXT_INVENTORY
        value: /v1/toll-context-inventory
      - name: PATH_TOLL_CONTEXT_LAYOUTS
        value: /v1/toll-context-layouts
      - name: PATH_TARIFF_TABLES
        value: /v1/tariff-tables
      - name: PATH_SYSTEM_PROVIDERS
        value: /v1/system-providers
      - name: PATH_EFC_CONTEXTS
        value: /v1/efc-contexts
      - name: APP_BASE_URL
        value: /x/xx/tcm-sky/
      - name: TOLL_CONTEXT_CONFIG_LOCATION
        value: /config/ui-toll-context-config.json
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "20"]
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
        ephemeral-storage: 1Gi
      requests:
        cpu: 33m
        memory: 64Mi
        ephemeral-storage: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
    probes:
      liveness:
        httpGet:
          path: /healthz
          port: 8080
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 10
      readiness:
        httpGet:
          path: /healthz
          port: 8080
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 5
      startup:
        httpGet:
          path: /healthz
          port: 8080
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 4
    volumeMounts:
      - name: config
        mountPath: /config
        readOnly: true

volumes:
  - name: config
    configMap:
      name: tcmsky-files
      defaultMode: 420

configmap:
  enabled: true
  binaryData:
    ui-toll-context-config.json: WwjQwOWEyNGYpY2ViZS8iCiAgfV0=

service:
  enabled: true
  type: ClusterIP
  clusterIP: x.x.x.x
  ports:
    - name: serviceport
      port: 8001
      targetPort: 8080
      protocol: TCP
  sessionAffinity: None

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: www-dev-sx.x.x.x
      paths:
        - path: /x/xx/tcm-sky(.*)
          pathType: Prefix
          servicePort: 8001

networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  podSelector:
    matchLabels:
      app: tcmsky
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              nsname: k8sinfra
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
        - podSelector:
            matchLabels:
              app: k8s-ansible-helper
        - namespaceSelector:
            matchLabels:
              kubernetes.io/cluster-service: "true"
          podSelector:
            matchLabels:
              kubernetes.azure.com/managedby: aks
      ports:
        - port: 8080
          protocol: TCP
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/cluster-service: "true"
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
