fullnameOverride: chargereportserver

# ─────────────────────────────────────────────────────────────
# Deployment Configuration
# ─────────────────────────────────────────────────────────────

deployment:
  enabled: true
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  annotations:
    deployment.kubernetes.io/revision: "1"
  podAnnotations:
    prometheus.io/path: /chargereportserver/manage/prometheus
    prometheus.io/port: "8018"
    prometheus.io/scrape: "true"
    redeploytrigger: 422f7b2e5b72563ba828e4797986b6fc95310de5
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - chargereportserver
            topologyKey: topology.kubernetes.io/zone
        - weight: 5
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - chargereportserver
            topologyKey: kubernetes.io/hostname
  hostAliases:
    - ip: x.x.x.x
      hostnames:
        - xxxxx.blob.core.windows.net
    - ip: x.x.x.x
      hostnames:
        - xxxxx-secondary.blob.core.windows.net
    - ip: x.x.x.x
      hostnames:
        - xxxx.blob.core.windows.net
    - ip: x.x.x.x
      hostnames:
        - xxxx.redis.cache.windows.net
  terminationGracePeriodSeconds: 60
  serviceAccount:
    automount: false

# ─────────────────────────────────────────────────────────────
# Container Configuration
# ─────────────────────────────────────────────────────────────

containers:
  - name: chargereportserver
    image:
      repository: xxx
      tag: xxx
    imagePullPolicy: Always
    ports:
      - name: serviceport
        containerPort: 8018
        protocol: TCP
    env:
      - name: SERVER_PORT
        value: "8018"
      - name: JAVA_TOOL_OPTIONS
        value: -XX:MaxRAMPercentage=60.0 -XX:+UseG1GC -XX:+ExitOnOutOfMemoryError -XX:+UseStringDeduplication
      - name: MANAGEMENT_SERVER_PORT
        value: "8018"
      - name: SPRING_CASSANDRA_CONTACT_POINTS
        value: xxxx.cassandra.cosmos.azure.com
      - name: SPRING_CASSANDRA_PORT
        value: "10350"
      - name: SPRING_CASSANDRA_KEYSPACE_NAME
        value: glpdatasink
      - name: SPRING_CASSANDRA_LOCAL_DATACENTER
        value: xxxx
      - name: CASSANDRA_CUSTOM_MAX_CONNECTIONS_PER_HOST
        value: "120"
      - name: CASSANDRA_CUSTOM_BUCKET_COUNT
        value: "8"
      - name: LOGGING_LEVEL_COM_XXX
        value: INFO
      - name: SERVER_SERVLET_CONTEXT_PATH
        value: /chargereportserver
    envFrom:
      - secretRef:
          name: chargereportserver-secret
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "20"]
    resources:
      limits:
        cpu: 300m
        memory: 768Mi
        ephemeral-storage: 1Gi
      requests:
        cpu: 100m
        memory: 768Mi
        ephemeral-storage: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
    probes:
      liveness:
        httpGet:
          path: /chargereportserver/manage/health
          port: 8018
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 10
      readiness:
        httpGet:
          path: /chargereportserver/manage/health
          port: 8018
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 5
      startup:
        httpGet:
          path: /chargereportserver/manage/health
          port: 8018
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 6

service:
  enabled: true
  type: ClusterIP
  ports:
    - name: serviceport
      port: 8018
      targetPort: 8018
      protocol: TCP
  sessionAffinity: None

secrets:
  enabled: true
  type: Opaque
  data:
    AZMON_COLLECT_ENV: xxxx=
    SPRING_CASSANDRA_PASSWORD: xxxx==
    SPRING_CASSANDRA_USERNAME: xxx=

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: ContainerResource
      containerResource:
        container: chargereportserver
        name: cpu
        target:
          type: AverageValue
          averageValue: 210m
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      selectPolicy: Max
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      selectPolicy: Max
      policies:
        - type: Pods
          value: 1
          periodSeconds: 180

networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  podSelector:
    matchLabels:
      app: chargereportserver
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: k8s-ansible-helper
        - podSelector:
            matchLabels:
              app: kong
      ports:
        - port: 8018
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/cluster-service: "true"
          podSelector:
            matchLabels:
              kubernetes.azure.com/managedby: aks
        - podSelector:
            matchLabels:
              app: k8s-ansible-helper
      ports:
        - port: 8018
          protocol: TCP
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/cluster-service: "true"
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 10350
          protocol: TCP
