app: photon
deployment_commit: 09df525f
deployment_ref: xx-14530-be--env01

replicaCount: 1
image:
  repository: docker.repo.xxx.xxx/servicecatalog/nominatim/photon
  tag: 0.7.3-xxxx-240101-patch-20250707-202508290626

containerPorts:
  - name: serviceport
    port: 2322
    protocol: TCP

env:
  - name: JAVA_OPTS
    value: -XX:MaxRAMPercentage=90.0 -XX:+UseG1GC -XX:+ExitOnOutOfMemoryError -XX:+UseStringDeduplication -Dfile.encoding=UTF-8

resources:
  limits:
    cpu: 300m
    memory: 768Mi
    ephemeral-storage: 1Gi
  requests:
    cpu: 100m
    memory: 768Mi
    ephemeral-storage: 1Gi

lifecycle:
  preStop:
    exec:
      command: ["sleep", "20"]

livenessProbe:
  httpGet:
    path: /api/?q=sof
    port: 2322
    scheme: HTTP
  initialDelaySeconds: 3
  periodSeconds: 20
  timeoutSeconds: 20
  successThreshold: 1
  failureThreshold: 10

readinessProbe:
  httpGet:
    path: /api/?q=sof
    port: 2322
    scheme: HTTP
  initialDelaySeconds: 3
  periodSeconds: 20
  timeoutSeconds: 20
  successThreshold: 1
  failureThreshold: 5

startupProbe:
  httpGet:
    path: /api/?q=sof
    port: 2322
    scheme: HTTP
  initialDelaySeconds: 3
  periodSeconds: 20
  timeoutSeconds: 20
  successThreshold: 1
  failureThreshold: 7

hostAliases:
  - ip: x.x.x.x
    hostnames:
      - xxxxx.blob.core.windows.net
      - xxxxx-secondary.blob.core.windows.net
      - xxxx.blob.core.windows.net
      - xxxx.redis.cache.windows.net

terminationGracePeriodSeconds: 60

service:
  sessionAffinity: None
  internalTrafficPolicy: Cluster
  ipFamily: IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: serviceport
      port: 2322
      protocol: TCP
      targetPort: 2322

autoscaling:
  enabled: true
  container: photonbg
  minReplicas: 1
  maxReplicas: 1
  targetCPUAverageValue: 210m
  scaleUp:
    pods: 2
    periodSeconds: 60
    selectPolicy: Max
    stabilizationWindowSeconds: 60
  scaleDown:
    pods: 1
    periodSeconds: 180
    selectPolicy: Max
    stabilizationWindowSeconds: 300

networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: k8s-ansible-helper
        - podSelector:
            matchLabels:
              app: mtd
      ports:
        - port: 2322
          protocol: TCP
  egress:
    - ports:
        - port: 53
          protocol: UDP
      to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/cluster-service: "true"
          podSelector:
            matchLabels:
              k8s-app: kube-dns
