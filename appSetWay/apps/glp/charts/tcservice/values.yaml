fullnameOverride: tcservice

deployment:
  enabled: true
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  annotations:
    deployment.kubernetes.io/revision: "1"
  podAnnotations:
    prometheus.io/path: /manage/prometheus
    prometheus.io/scrapemulticontainer: "true"
    redeploytrigger: 9117285
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - tcservice
            topologyKey: topology.kubernetes.io/zone
        - weight: 5
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - tcservice
            topologyKey: kubernetes.io/hostname
  hostAliases:
    - ip: x.x.x.x
      hostnames:
        - xxxxx.blob.core.
    - ip: x.x.x.x
      hostnames:
        - xxxxx-secondary.blob.core.
    - ip: x.x.x.x
      hostnames:
        - xxxx.blob.core
    - ip: x.x.x.x
      hostnames:
        - xxxx.redis.cache.
    - ip: 127.0.0.1
      hostnames:
        - tcmappinglinker
        - tcmtower
  terminationGracePeriodSeconds: 60
  serviceAccount:
    automount: false
  shareProcessNamespace: true

initContainers:
  - name: tcservice-init
    image:
      repository: xx
      tag: xx
    imagePullPolicy: Always
    command:
      - /bin/bash
      - -c
      - |
        set -e
        clean_tc_db_file=$(echo "$TOLL_CONTEXT_DATABASE_FILE" | sed 's/[?&].*//')
        echo "Download TCM Tower database from storage account ..." $clean_tc_db_file
        curl -f -L -o /data/tcmtower.db "$TOLL_CONTEXT_DATABASE_FILE"
        clean_tcl_db_file=$(echo "$TOLL_CONTEXT_MAPPINGS_DATABASE_FILE" | sed 's/[?&].*//')
        echo "Download tc_mapping_linker database from storage account ..." $clean_tcl_db_file
        curl -f -L -o /data/tcmappinglinker.db "$TOLL_CONTEXT_MAPPINGS_DATABASE_FILE"
    envFrom:
      - secretRef:
          name: tcservice-initcontainer-secret
    resources:
      limits:
        cpu: 500m
        memory: 768Mi
        ephemeral-storage: 1Gi
      requests:
        cpu: 125m
        memory: 768Mi
        ephemeral-storage: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
    volumeMounts:
      - name: data
        mountPath: /data

volumes:
  - name: data
    emptyDir:
      sizeLimit: 1Gi

containers:
  - name: tcservice
    image:
      repository: xx
      tag: xx
    imagePullPolicy: Always
    ports:
      - containerPort: 8819
        name: metrics
        protocol: TCP
    env:
      - name: JAVA_TOOL_OPTIONS
        value: -XX:MaxRAMPercentage=60.0 -XX:+UseG1GC -XX:+ExitOnOutOfMemoryError
      - name: LOGGING_LEVEL_COM_XXX
        value: DEBUG
      - name: SERVER_PORT
        value: "8819"
      - name: SERVER_SERVLET_CONTEXT_PATH
        value: /
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: info,health,prometheus
      - name: TOLLCONTEXTMAPPER_URL
        value: http://tcmappinglinker:8077
      - name: RATING_URL
        value: http://tcmtower:8050
      - name: SPRING_CLOUD_OPENFEIGN_HTTPCLIENT_MAXCONNECTIONS
        value: "64"
      - name: RULE_MAX_CHARGE_OBJECT_DETECTION_AGE
        value: PT90M
      - name: RULE_MAX_LENGTH
        value: "1250"
    envFrom:
      - secretRef:
          name: tcservice-secret
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "20"]
    resources:
      limits:
        cpu: 500m
        memory: 768Mi
        ephemeral-storage: 1Gi
      requests:
        cpu: 125m
        memory: 768Mi
        ephemeral-storage: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
    probes:
      liveness:
        httpGet:
          path: /manage/health
          port: 8819
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 10
      readiness:
        httpGet:
          path: /manage/health
          port: 8819
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 5
      startup:
        httpGet:
          path: /manage/health
          port: 8819
        initialDelaySeconds: 3
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 4
    volumeMounts:
      - name: data
        mountPath: /data
        readOnly: true

  - name: tcservice-tower-sidecar
    image:
      repository: xx
      tag: xx
    imagePullPolicy: Always
    ports:
      - containerPort: 8050
        name: serviceport
        protocol: TCP
      - containerPort: 18050
        name: metrics-tower
        protocol: TCP
    env:
      - name: SERVER_PORT
        value: "8050"
      - name: MANAGEMENT_SERVER_PORT
        value: "18050"
      - name: JAVA_TOOL_OPTIONS
        value: -XX:MaxRAMPercentage=80.0 -XX:+ExitOnOutOfMemoryError -XX:+UseG1GC -Dfile.encoding=UTF-8
      - name: SPRING_DATASOURCE_URL
        value: jdbc:sqlite:/data/tcmtower.db?open_mode=1
      - name: SPRING_DATASOURCE_HIKARI_READ_ONLY
        value: "true"
      - name: SPRING_FLYWAY_ENABLED
        value: "true"
      - name: LOGGING_LEVEL_COM_XXX
        value: INFO
      - name: SPRING_PROFILES_ACTIVE
        value: sqlite
      - name: API_CORS_ALLOWED_ORIGINS
        value: https://www-.x.x.x,https://www-.x.x.x,https://www-.x.x.x
      - name: SERVER_SERVLET_CONTEXT_PATH
        value: /
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "20"]
    resources:
      limits:
        cpu: 500m
        memory: 768Mi
        ephemeral-storage: 1Gi
      requests:
        cpu: 125m
        memory: 768Mi
        ephemeral-storage: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
    probes:
      liveness:
        httpGet:
          path: /manage/health
          port: 18050
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 10
      readiness:
        httpGet:
          path: /manage/health
          port: 18050
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 5
      startup:
        httpGet:
          path: /manage/health
          port: 18050
        periodSeconds: 20
        timeoutSeconds: 20
        successThreshold: 1
        failureThreshold: 11
    volumeMounts:
      - name: data
        mountPath: /data
        readOnly: true

  - name: tcservice-linker-sidecar
    image:
      repository: xx
      tag: xx
    imagePullPolicy: Always
    ports:
      - containerPort: 8077
        name: serviceport
        protocol: TCP
      - containerPort: 18077
        name: metrics-linker
        protocol: TCP
    env:
      - name: JAVA_TOOL_OPTIONS
        value: -XX:MaxRAMPercentage
