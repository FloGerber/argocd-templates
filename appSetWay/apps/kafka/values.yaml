kafkaCluster:
  name: kdp-kafka-cluster
  namespace: kafka
  annotations:
    node-pools: enabled
    kraft: enabled
    # pauseReconciliation: "false"
  version: 4.0.0
  metadataVersion: 4.0-IV3
  replicas: 3
  replicationFactor: 3
  minIsr: 2
  storageSize: 100Gi
  zookeeperStorageSize: 50Gi
  listeners:
    - name: tls
      port: 9093
      type: internal
      tls: true
    - name: plain
      port: 9092
      type: internal
      tls: false
  config:
    offsets.topic.replication.factor: 3
    transaction.state.log.replication.factor: 3
    transaction.state.log.min.isr: 2
    default.replication.factor: 3
    min.insync.replicas: 2
    # log.segment.bytes: 1073741824   # this seems to break in the template
    # log.retention.hours: 168
    # log.retention.check.interval.ms: 300000
  entityOperator:
    enabled: false
    topicOperator:
      watchedNamespace: kafka-topics
      reconciliationIntervalMs: 60000
    userOperator:
      watchedNamespace: kafka-topics
      reconciliationIntervalMs: 60000
  cruiseControl:
    enabled: true
    templates:
      - name: add-brokers-template
      - name: remove-brokers-template

kafkaTopics:
  - name: orders
    partitions: 6
    replicas: 3
    config:
      retention.ms: 7200000
      segment.bytes: 1073741824
  - name: payments
    partitions: 3
    replicas: 2
    config:
      cleanup.policy: compact

kafkaUsers:
  - name: orders-user
    cluster: kdp-kafka-cluster
    authentication:
      type: tls
    template:
      secret:
        metadata:
          labels:
            team: orders
          annotations:
            owner: team-orders
    authorization:
      type: simple
      acls:
        - resource:
            type: topic
            name: orders
            patternType: literal
          operations: [Describe, Read, Write]
          host: "*"
        - resource:
            type: group
            name: orders-group
            patternType: literal
          operations: [Read]
          host: "*"
    quotas:
      producerByteRate: 1048576
      consumerByteRate: 2097152
      requestPercentage: 55
      controllerMutationRate: 10

kafkaAccessList:
  - name: access-orders
    kafkaClusterName: kdp-kafka-cluster
    kafkaNamespace: kafka
    listener: tls
    userName: orders-user
    userNamespace: kafka

kafkaRebalancerConfig:
  - name: rebalance-orders
    namespace: kafka
    cluster: kdp-kafka-cluster
    mode: full
    goals:
      - DiskCapacityGoal
      - NetworkInboundCapacityGoal
  - name: rebalance-payments
    namespace: kafka
    cluster: kdp-kafka-cluster
    goals:
      - CpuCapacityGoal
